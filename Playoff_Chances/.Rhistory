ly_text(x=0.51,y=0.2,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test') %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green') %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=-0.05,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=0.2,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test') %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green') %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=0.2,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test') %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green') %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=0.2,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test') %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green') %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0.1) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green') %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green') %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
View(df)
display_df <- df %>% select(-user_id,-score)
colnames(display_df)
colnames(display_df) <- c("Name","Rank","Quantity Score","Quality Score","# of ARs","Avg time per AR")
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 90) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 80) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 90) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 91) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 1) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 2) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
?ly_text
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
good_quantity <- paste('More Appraisals',sprintf('\u2192'))
bad_quantity <-  paste( sprintf('\u2190'), 'Less Appraisals')
good_quality <- paste( sprintf('\u2192'),'Accurate Appraisals')
bad_quality <- paste( sprintf('\u2193'),'Inaccurate Appraisals')
library(rbokeh)
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
good_quality <- paste( 'Accurate Appraisals',sprintf('\u2192'))
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.2,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.25,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red') %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
bad_quality <- paste( sprintf('\u2190'),'Inaccurate Appraisals')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.3,y=0.44,text=bad_quality,color='red',angle=1.5708) %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.3,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.1,y=0.44,text=bad_quality,color='red',angle=1.5708) %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.52,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.52,y=0.34,text=bad_quality,color='red',angle=1.5708) %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.52,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.52,y=0.23,text=bad_quality,color='red',angle=1.5708) %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.52,y=0.62,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.52,y=0.23,text=bad_quality,color='red',angle=1.5708) %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.54,y=0.62,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.54,y=0.23,text=bad_quality,color='red',angle=1.5708) %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.54,y=0.62,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.54,y=0.13,text=bad_quality,color='red',angle=1.5708) %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
figure(width=600,height=600,
xlab = "Quantity",ylab="Quality",
tools = c("box_zoom", "reset", "save"),
logo = NULL,
title='Visualizing Appraiser Success',
subtitle='Test',padding_factor = 0) %>%
ly_points(rel_quantity,rel_quality,data=df,
hover = display_df) %>%
ly_abline(v = 0.5,alpha=0.8,type=4) %>%
ly_abline(h = 0.5,alpha=0.8,type=4) %>%
ly_text(x=0.54,y=0.52,text=good_quality,color='green',angle = 1.5708) %>%
ly_text(x=0.54,y=0.13,text=bad_quality,color='red',angle=1.5708) %>%
ly_text(x=0.23,y=-0.05,text = bad_quantity,color='red') %>%
ly_text(x=0.51,y=-0.05,text=good_quantity,color='green')
runApp('Documents/GitHub/data-projects/Appraiser_Scorecard/Shiny_Dashboard')
runApp('Documents/GitHub/data-projects/Appraiser_Scorecard/Shiny_Dashboard')
runApp('Documents/GitHub/data-projects/Appraiser_Scorecard/Shiny_Dashboard')
shiny::runApp('Documents/GitHub/data-projects/Appraiser_Scorecard/Shiny_Dashboard')
runApp('Documents/GitHub/data-projects/Appraiser_Scorecard/Shiny_Dashboard')
library(rbokeh)
runApp('Documents/GitHub/data-projects/Appraiser_Scorecard/Shiny_Dashboard')
shiny::runApp('Documents/GitHub/data-projects/Appraiser_Scorecard/Shiny_Dashboard')
runApp('Documents/GitHub/data-projects/Appraiser_Scorecard/Shiny_Dashboard')
devtools::install_github("meysubb/collegeballR")
librar
library(collegeballR)
years <- expand.grid(yrs = 2017:2018,week=1:17)
years
year_df <- years %>% mutate(
pbp = purrr::map2(yrs,week,cfb_pbp_data)
)
library(tidyverse)
year_df <- years %>% mutate(
pbp = purrr::map2(yrs,week,cfb_pbp_data)
)
pbp_year_df <- year_df %>% tidyr::unnest()
View(pbp_year_df)
unique(pbp_year_df$play_type)
pbp_year_df <- pbp_year_df %>% mutate(
pen = play_type == "Penalty"
)
View(pbp_year_df)
### examine penalty
pen <- pbp_year_df %>% filter(pen==T)
View(pen)
pen$play_text[[1]]
### examine penalty
pen <- pbp_year_df %>% filter(pen==T) %>% mutate(
play_text = tolower(play_text)
)
grep("targetting",pen$play_text)
grep("start",pen$play_text)
grep("targeting",pen$play_text)
target <- pen$play_text[grep("targeting",pen$play_text),]
target <- pen$play_text[grep("targeting",pen$play_text)]
target[1]
target[2]
target[3]
target[4]
target[5]
target[10]
target[11]
target[12]
target[15]
target[20]
target_df <- pen[grep("targeting",pen$play_text),]
View(target_df)
target <- pen$play_text[grep("target",pen$play_text)]
View(target_df)
review <- grep("review",pbp_year_df$play_text)
pbp_year_df$play_text
review <- grep("review",pbp_year_df$play_text)
library(jsonlite)
fromJSON(url=url)
s <- fromJSON(url)
s <- fromJSON(txt=url)
fromJson
?fromJSON
url <- "https://data.ncaa.com/game/basketball-men/d1/2018/11/09/hampton-vcu/pbp.json"
s <- fromJSON(txt=url)
View(s)
s$meta
s$periods$playStats
setwd("~/Documents/GitHub/Personal_Proj/Fantasy_Football_League/Playoff_Chances")
test <- read.csv("playoff_chances.csv")
View(test)
test$Average
library(tidyverse)
options(stringsAsFactors = FALSE)
standings <- read_csv("sleeper_current_standings.csv")
standings$fpts
standings$fpts_decimal
library(tidyverse)
options(stringsAsFactors = FALSE)
standings <- read_csv("sleeper_current_standings.csv")
standings <- standings %>% mutate(
avg_pts = (fpts + fpts_decimal/100)/(wins+losses)
)
standings$avg_pts
library(tidyverse)
options(stringsAsFactors = FALSE)
standings <- read_csv("sleeper_current_standings.csv")
standings <- standings %>% mutate(
avg_pts = (fpts + fpts_decimal/100)/(wins+losses)
)
playoff_df <- as.data.frame(standings$name)
playoff_df$made <- 0
colnames(playoff_df)[1] <- "Team"
score_std_dev <- sd(standings$avg_pts)
sched <- read_csv("r_sched_2.csv")
sched <- sched %>% mutate(
Week = as.numeric(Week),
Matchup = as.numeric(Matchup)
)
#sched <- sched %>% select(-X4,-X5)
library(foreach)
n <- 5000
pb <- txtProgressBar(0, n, style = 2)
## Generate random df scores
t <- foreach(i=1:5000) %do% {
setTxtProgressBar(pb, i)
scores <- as.data.frame(replicate(3,rnorm(10, mean = standings$avg_pts, sd = score_std_dev)))
scores$Team <- standings$name
## Need to find a better way to extract this
colnames(scores)[1:3] <- c(11,12,13)
scores <- reshape2::melt(scores)
colnames(scores)[2] <- "Week"
scores$Week <- as.numeric(scores$Week)
scores$Week[scores$Week == 1] <- 11
scores$Week[scores$Week == 2] <- 12
scores$Week[scores$Week == 3] <- 13
sched2 <- inner_join(scores,sched)
sched_sim <- sched2 %>% group_by(Week,Matchup) %>%
mutate(win = ifelse(value>lag(value),1,0),
win = ifelse(is.na(win), 1-sum(win,na.rm = TRUE), win),
loss = 1-win) %>% ungroup()
sim_record <- sched_sim %>% group_by(Team) %>%
summarize(sim_win = sum(win),
sim_loss = sum(loss),
points_scored = sum(value)) %>% ungroup()
ext_standings <- inner_join(standings,sim_record,by=c("name"="Team"))
ext_standings <- ext_standings %>%
mutate(update_W = wins + sim_win,
update_L = losses + sim_loss,
win_pct = update_W/(update_L+update_W),
upd_pts_scored = ppts + points_scored) %>%
arrange(-win_pct,-upd_pts_scored) %>%
mutate(rank= row_number(),
playoffs = ifelse(rank<=6,1,0))
playoff_odds <- ext_standings %>% select(name,playoffs)
inner_join(playoff_df,playoff_odds,by=c("Team"="name"))
}
final_res <- bind_rows(t) %>% group_by(Team) %>%
summarize(Playoff_Apps = sum(playoffs),
pct_chance = Playoff_Apps/5000)
final_res
final_res %>% arrange(pct_chance)
final_res %>% arrange(-pct_chance)
final_res$pct_chance
final_res
final_res %>% arrange(-pct_chance)
standings$avg_pts
standings$name
